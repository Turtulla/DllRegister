<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>